{type:"class",attributes:{"name":"Grid","hasWarning":"true","packageName":"qx.ui.decoration","superClass":"qx.ui.decoration.Abstract","fullName":"qx.ui.decoration.Grid","type":"class"},children:[{type:"desc",attributes:{"text":"<p>A very complex decoration using two, partly combined and clipped images\nto render a graphically impressive borders with gradients.</p>\n\n<p>The decoration supports all forms of vertical gradients. The gradients must\nbe stretchable to support different heights.</p>\n\n<p>The edges could use different styles of rounded borders. Even different\nedge sizes are supported. The sizes are automatically detected by\nthe build system using the image metadata.</p>\n\n<p>The decoration uses clipped images to reduce the number of external\nresources.</p>"}},{type:"constructor",children:[{type:"method",attributes:{"isCtor":"true","name":"ctor"},children:[{type:"params",children:[{type:"param",attributes:{"name":"baseImage"}}]}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"private","hasError":"true","name":"__computeImages"},children:[{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"17","line":"302"}}]}]},{type:"method",attributes:{"access":"private","hasError":"true","name":"__computeMarkup"},children:[{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"17","line":"185"}}]}]},{type:"method",attributes:{"access":"private","hasError":"true","name":"__createInnerElement"},children:[{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"22","line":"325"}}]}]},{type:"method",attributes:{"access":"protected","apply":"qx.ui.decoration.Grid#baseImage","name":"_changeBaseImage"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>new value of the property</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>previous value of the property (null if it was not yet set).</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]},{type:"desc",attributes:{"text":"<p>Applies changes of the property value of the property <code>baseImage</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_changeBaseImage}.</p>"}}]},{type:"method",attributes:{"access":"protected","apply":"qx.ui.decoration.Grid#bottomBorder","name":"_changeBorderVisibility"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>new value of the property</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>previous value of the property (null if it was not yet set).</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"desc",attributes:{"text":"<p>Applies changes of the property value of the property <code>rightBorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_changeBorderVisibility}.</p>"}}]},{type:"method",attributes:{"name":"getBaseImage","fromProperty":"baseImage"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>baseImage</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #baseImage}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>baseImage</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getBottomBorder","fromProperty":"bottomBorder"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>bottomBorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #bottomBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>bottomBorder</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getInsetBottom","fromProperty":"insetBottom"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>insetBottom</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insetBottom}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>insetBottom</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getInsetLeft","fromProperty":"insetLeft"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>insetLeft</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insetLeft}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>insetLeft</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getInsetRight","fromProperty":"insetRight"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>insetRight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insetRight}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>insetRight</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"docFrom":"qx.ui.decoration.IDecorator","name":"getInsets"}},{type:"method",attributes:{"name":"getInsetTop","fromProperty":"insetTop"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>insetTop</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insetTop}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>insetTop</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getLeftBorder","fromProperty":"leftBorder"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>leftBorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #leftBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>leftBorder</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getRightBorder","fromProperty":"rightBorder"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>rightBorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #rightBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>rightBorder</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getTopBorder","fromProperty":"topBorder"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>topBorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #topBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>topBorder</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initBaseImage","fromProperty":"baseImage"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>baseImage</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>baseImage</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #baseImage}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initBottomBorder","fromProperty":"bottomBorder"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>bottomBorder</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>bottomBorder</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #bottomBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initInsetBottom","fromProperty":"insetBottom"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>insetBottom</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>insetBottom</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #insetBottom}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initInsetLeft","fromProperty":"insetLeft"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>insetLeft</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>insetLeft</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #insetLeft}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initInsetRight","fromProperty":"insetRight"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>insetRight</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>insetRight</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #insetRight}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initInsetTop","fromProperty":"insetTop"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>insetTop</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>insetTop</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #insetTop}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initLeftBorder","fromProperty":"leftBorder"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>leftBorder</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>leftBorder</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #leftBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initRightBorder","fromProperty":"rightBorder"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>rightBorder</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>rightBorder</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #rightBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initTopBorder","fromProperty":"topBorder"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>topBorder</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>topBorder</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #topBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"isBottomBorder","fromProperty":"bottomBorder"},children:[{type:"desc",attributes:{"text":"<p>Check whether the (computed) value of the boolean property <code>bottomBorder</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #bottomBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Whether the property equals <code>true</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"method",attributes:{"name":"isLeftBorder","fromProperty":"leftBorder"},children:[{type:"desc",attributes:{"text":"<p>Check whether the (computed) value of the boolean property <code>leftBorder</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #leftBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Whether the property equals <code>true</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"method",attributes:{"name":"isRightBorder","fromProperty":"rightBorder"},children:[{type:"desc",attributes:{"text":"<p>Check whether the (computed) value of the boolean property <code>rightBorder</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #rightBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Whether the property equals <code>true</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"method",attributes:{"name":"isTopBorder","fromProperty":"topBorder"},children:[{type:"desc",attributes:{"text":"<p>Check whether the (computed) value of the boolean property <code>topBorder</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #topBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Whether the property equals <code>true</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"method",attributes:{"docFrom":"qx.ui.decoration.IDecorator","name":"render"},children:[{type:"params",children:[{type:"param",attributes:{"name":"element"}},{type:"param",attributes:{"name":"width"}},{type:"param",attributes:{"name":"height"}},{type:"param",attributes:{"name":"backgroundColor"}},{type:"param",attributes:{"name":"changes"}}]}]},{type:"method",attributes:{"docFrom":"qx.ui.decoration.IDecorator","overriddenFrom":"qx.core.Object","name":"reset"},children:[{type:"params",children:[{type:"param",attributes:{"name":"element"}}]}]},{type:"method",attributes:{"name":"resetBaseImage","fromProperty":"baseImage"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>baseImage</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #baseImage}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetBottomBorder","fromProperty":"bottomBorder"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>bottomBorder</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #bottomBorder}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetInsetBottom","fromProperty":"insetBottom"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>insetBottom</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #insetBottom}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetInsetLeft","fromProperty":"insetLeft"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>insetLeft</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #insetLeft}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetInsetRight","fromProperty":"insetRight"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>insetRight</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #insetRight}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetInsets","fromProperty":"insets"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>insets</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #insets}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetInsetTop","fromProperty":"insetTop"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>insetTop</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #insetTop}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetLeftBorder","fromProperty":"leftBorder"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>leftBorder</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #leftBorder}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetRightBorder","fromProperty":"rightBorder"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>rightBorder</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #rightBorder}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetTopBorder","fromProperty":"topBorder"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>topBorder</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #topBorder}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"setBaseImage","fromProperty":"baseImage"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>baseImage</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>baseImage</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #baseImage}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setBottomBorder","fromProperty":"bottomBorder"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>bottomBorder</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>bottomBorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #bottomBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setInsetBottom","fromProperty":"insetBottom"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>insetBottom</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>insetBottom</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insetBottom}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setInsetLeft","fromProperty":"insetLeft"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>insetLeft</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>insetLeft</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insetLeft}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setInsetRight","fromProperty":"insetRight"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>insetRight</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>insetRight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insetRight}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setInsets","fromProperty":"insets"},children:[{type:"params",children:[{type:"param",attributes:{"name":"insetTop"},children:[{type:"desc",attributes:{"text":"<p>Sets the value of the property {@link #insetTop}.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"insetRight"},children:[{type:"desc",attributes:{"text":"<p>Sets the value of the property {@link #insetRight}.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"insetBottom"},children:[{type:"desc",attributes:{"text":"<p>Sets the value of the property {@link #insetBottom}.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"insetLeft"},children:[{type:"desc",attributes:{"text":"<p>Sets the value of the property {@link #insetLeft}.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the values of the property group <code>insets</code>.</p>\n\n<p>This setter supports a shorthand mode compatible with the way margins and paddins are set in <span class=\"caps\">CSS</span>.</p>\n\n<p>For further details take a look at the property definition: {@link #insets}.</p>"}}]},{type:"method",attributes:{"name":"setInsetTop","fromProperty":"insetTop"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>insetTop</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>insetTop</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insetTop}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setLeftBorder","fromProperty":"leftBorder"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>leftBorder</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>leftBorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #leftBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setRightBorder","fromProperty":"rightBorder"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>rightBorder</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>rightBorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #rightBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setTopBorder","fromProperty":"topBorder"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>topBorder</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>topBorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #topBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"toggleBottomBorder","fromProperty":"bottomBorder"},children:[{type:"desc",attributes:{"text":"<p>Toggles the (computed) value of the boolean property <code>bottomBorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #bottomBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the new value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"method",attributes:{"name":"toggleLeftBorder","fromProperty":"leftBorder"},children:[{type:"desc",attributes:{"text":"<p>Toggles the (computed) value of the boolean property <code>leftBorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #leftBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the new value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"method",attributes:{"name":"toggleRightBorder","fromProperty":"rightBorder"},children:[{type:"desc",attributes:{"text":"<p>Toggles the (computed) value of the boolean property <code>rightBorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #rightBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the new value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"method",attributes:{"name":"toggleTopBorder","fromProperty":"topBorder"},children:[{type:"desc",attributes:{"text":"<p>Toggles the (computed) value of the boolean property <code>topBorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #topBorder}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the new value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]}]},{type:"properties",children:[{type:"property",attributes:{"check":"String","allowNull":"true","propertyType":"new","name":"baseImage","apply":"_changeBaseImage"},children:[{type:"desc",attributes:{"text":"<p>Base Image <span class=\"caps\">URL</span>. All the different images needed are named by the default\nnaming scheme:</p>\n\n<p>${baseImageWithoutExtension}-${imageName}.${baseImageExtension}</p>\n\n<p>These image names are used:</p>\n\n<ul>\n<li>tl (top-left edge)</li>\n<li>t (top side)</li>\n<li>tr (top-right edge)</li>\n</ul>\n\n<ul>\n<li>bl (bottom-left edge)</li>\n<li>b (bottom side)</li>\n<li>br (bottom-right edge)</li>\n</ul>\n\n<ul>\n<li>l (left side)</li>\n<li>c (center image)</li>\n<li>r (right side)</li>\n</ul>"}}]},{type:"property",attributes:{"apply":"_changeBorderVisibility","defaultValue":"true","propertyType":"new","name":"bottomBorder","check":"Boolean"},children:[{type:"desc",attributes:{"text":"<p>Whether the bottom border should be visible</p>"}}]},{type:"property",attributes:{"defaultValue":"0","propertyType":"new","name":"insetBottom","check":"Number"},children:[{type:"desc",attributes:{"text":"<p>Width of the bottom inset</p>"}}]},{type:"property",attributes:{"defaultValue":"0","propertyType":"new","name":"insetLeft","check":"Number"},children:[{type:"desc",attributes:{"text":"<p>Width of the left inset</p>"}}]},{type:"property",attributes:{"defaultValue":"0","propertyType":"new","name":"insetRight","check":"Number"},children:[{type:"desc",attributes:{"text":"<p>Width of the right inset</p>"}}]},{type:"property",attributes:{"propertyType":"group","group":"\"insetTop\",\"insetRight\",\"insetBottom\",\"insetLeft\"","name":"insets","mode":"shorthand"},children:[{type:"desc",attributes:{"text":"<p>Property group for insets</p>"}}]},{type:"property",attributes:{"defaultValue":"0","propertyType":"new","name":"insetTop","check":"Number"},children:[{type:"desc",attributes:{"text":"<p>Width of the top inset</p>"}}]},{type:"property",attributes:{"apply":"_changeBorderVisibility","defaultValue":"true","propertyType":"new","name":"leftBorder","check":"Boolean"},children:[{type:"desc",attributes:{"text":"<p>Whether the left border should be visible</p>"}}]},{type:"property",attributes:{"apply":"_changeBorderVisibility","defaultValue":"true","propertyType":"new","name":"rightBorder","check":"Boolean"},children:[{type:"desc",attributes:{"text":"<p>Whether the right border should be visible</p>"}}]},{type:"property",attributes:{"apply":"_changeBorderVisibility","defaultValue":"true","propertyType":"new","name":"topBorder","check":"Boolean"},children:[{type:"desc",attributes:{"text":"<p>Whether the top border should be visible</p>"}}]}]}]}