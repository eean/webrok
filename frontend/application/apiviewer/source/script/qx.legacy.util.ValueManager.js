{type:"class",attributes:{"isAbstract":"true","name":"ValueManager","packageName":"qx.legacy.util","superClass":"qx.core.Object","childClasses":"qx.legacy.theme.manager.Border,qx.legacy.theme.manager.Color,qx.legacy.theme.manager.Font,qx.legacy.util.AliasManager","fullName":"qx.legacy.util.ValueManager","type":"class"},children:[{type:"constructor",children:[{type:"method",attributes:{"isCtor":"true","name":"ctor"}}]},{type:"methods-static",children:[{type:"method",attributes:{"isStatic":"true","name":"disconnect"},children:[{type:"params",children:[{type:"param",attributes:{"name":"obj"},children:[{type:"desc",attributes:{"text":"<p>any valid object</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Object"}}]}]}]},{type:"desc",attributes:{"text":"<p>Disconnect the given object from all registered value managers</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"isStatic":"true","name":"register"},children:[{type:"params",children:[{type:"param",attributes:{"name":"mgr"},children:[{type:"desc",attributes:{"text":"<p>value manager to remove</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.legacy.util.ValueManager"}}]}]}]},{type:"desc",attributes:{"text":"<p>Registers the given manager from the registry.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"isStatic":"true","name":"unregister"},children:[{type:"params",children:[{type:"param",attributes:{"name":"mgr"},children:[{type:"desc",attributes:{"text":"<p>value manager to remove</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.legacy.util.ValueManager"}}]}]}]},{type:"desc",attributes:{"text":"<p>Unregisters the given manager from the registry.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]}]},{type:"methods",children:[{type:"method",attributes:{"name":"connect"},children:[{type:"params",children:[{type:"param",attributes:{"name":"callback"},children:[{type:"desc",attributes:{"text":"<p>The callback function which handles the\n  apply of the resulting dynamically resolved value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Function"}}]}]},{type:"param",attributes:{"name":"obj"},children:[{type:"desc",attributes:{"text":"<p>The context, the callback will be caled with.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Object"}}]}]},{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Any acceptable value, but no booleans and no undefined</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Processing a value and handle callback execution on updates.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"disconnectObject"},children:[{type:"params",children:[{type:"param",attributes:{"name":"obj"},children:[{type:"desc",attributes:{"text":"<p>The class, which should be disconnected.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.core.Object"}}]}]}]},{type:"desc",attributes:{"text":"<p>Disconnect all connections to the given object.</p>"}}]},{type:"method",attributes:{"name":"isDynamic"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>dynamically interpreted idenfier</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]},{type:"desc",attributes:{"text":"<p>Whether a value is interpreted dynamically</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>returns true if the value is interpreted dynamically</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"method",attributes:{"name":"resolveDynamic"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>dynamically interpreted idenfier</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]},{type:"desc",attributes:{"text":"<p>Returns the dynamically interpreted result for the incoming value</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>return the (translated) result of the incoming value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"updateAll"},children:[{type:"desc",attributes:{"text":"<p>Update all registered objects regarding a global change in\ninterpretion of all values. This normally happens on whole\nchanges of a e.g. theme, locale, etc.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"updateUsersOf"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>a dynamic value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the callbacks of all objects connected to this value.\nAll argumants passed to this function (including <code>value</code>) are\nalso the arguments of the callbacks.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]}]}]}