{type:"class",attributes:{"name":"RadioButton","packageName":"qx.legacy.ui.form","superClass":"qx.legacy.ui.form.CheckBox","fullName":"qx.legacy.ui.form.RadioButton","type":"class"},children:[{type:"constructor",children:[{type:"method",attributes:{"isCtor":"true","name":"ctor"},children:[{type:"params",children:[{type:"param",attributes:{"name":"vText"}},{type:"param",attributes:{"name":"vValue"}},{type:"param",attributes:{"name":"vName"}},{type:"param",attributes:{"name":"vChecked"}}]}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"protected","apply":"qx.legacy.ui.form.CheckBox#checked","overriddenFrom":"qx.legacy.ui.form.CheckBox","name":"_applyChecked"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Current value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>Previous value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]}]},{type:"method",attributes:{"access":"protected","apply":"qx.legacy.ui.form.RadioButton#manager","name":"_applyManager"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Current value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>Previous value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]}]},{type:"method",attributes:{"access":"protected","name":"_applyName"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Current value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>Previous value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Apply method for property &#8220;name&#8221;</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_applyValue"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Current value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>Previous value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Apply method for property &#8220;value&#8221;</p>"}}]},{type:"method",attributes:{"access":"protected","overriddenFrom":"qx.legacy.ui.form.CheckBox","name":"_onclick"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>click event</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.legacy.event.type.MouseEvent"}}]}]}]},{type:"desc",attributes:{"text":"<p>Callback method for &#8220;click&#8221; event</p>\n\n<p>Simply sets the &#8220;checked&#8221; property to true</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"access":"protected","overriddenFrom":"qx.legacy.ui.form.CheckBox","name":"_onkeydown"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>keyDown event</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.legacy.event.type.KeyEvent"}}]}]}]},{type:"desc",attributes:{"text":"<p>Callback method for &#8220;keyDown&#8221; event</p>\n\n<p>Sets the property &#8220;checked&#8221; to true if &#8220;Enter&#8221; key is pressed.\nDoes only work if the &#8220;Enter&#8221; key is not pressed in combination with\nthe &#8220;Alt&#8221; key.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"_onkeypress"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>keyPress event</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.legacy.event.type.KeyEvent"}}]}]}]},{type:"desc",attributes:{"text":"<p>Callback method for the &#8220;keyPress&#8221; event.</p>\n\n<p>Selects the previous RadioButton when pressing &#8220;Left&#8221; or &#8220;Up&#8221; and\nselects the next RadioButton when pressing &#8220;Right&#8221; and &#8220;Down&#8221;</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"null"}},{type:"entry",attributes:{"type":"true"}}]}]}]},{type:"method",attributes:{"access":"protected","overriddenFrom":"qx.legacy.ui.form.CheckBox","name":"_onkeyup"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>keyUp event</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.legacy.event.type.KeyEvent"}}]}]}]},{type:"desc",attributes:{"text":"<p>Callback method for &#8220;keyUp&#8221; event</p>\n\n<p>If &#8220;Space&#8221; is pressed the property &#8220;checked&#8221; is set to true</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"getManager","fromProperty":"manager"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>manager</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #manager}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>manager</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initManager","fromProperty":"manager"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>manager</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>manager</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #manager}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"resetManager","fromProperty":"manager"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>manager</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #manager}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"setManager","fromProperty":"manager"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>manager</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>manager</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #manager}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]}]},{type:"properties",children:[{type:"property",attributes:{"name":"appearance","docFrom":"qx.legacy.ui.core.Widget","defaultValue":"\"radio-button\"","refine":"true","propertyType":"new","overriddenFrom":"qx.legacy.ui.form.CheckBox"}},{type:"property",attributes:{"check":"qx.legacy.ui.selection.RadioManager","allowNull":"true","propertyType":"new","name":"manager","apply":"_applyManager"},children:[{type:"desc",attributes:{"text":"<p>The assigned qx.legacy.ui.selection.RadioManager which handles the switching between registered buttons</p>"}}]}]}]}